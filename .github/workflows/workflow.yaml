# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
#
#name: Python package
#
#on:
#  push:
#    branches: [ "develop", "feature/*" ]
#  pull_request:
#    branches: [ "develop" ]
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        python-version: ["3.11"]
#
#    steps:
#    - uses: actions/checkout@v3
#    - name: Set up Python ${{ matrix.python-version }}
#      uses: actions/setup-python@v3
#      with:
#        python-version: ${{ matrix.python-version }}
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        python -m pip install flake8 pytest
#        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#    - name: Lint with flake8
#      run: |
#        # stop the build if there are Python syntax errors or undefined names
#        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#    - name: Test with pytest
#      run: |
#        python3 -m pytest



name: Python package

on:
  push:
    branches: [ "develop", "feature/*", "hotfix/*"]
  pull_request:
    branches: [ "develop", "master" ]

jobs:
  qa:
    runs-on: ubuntu-latest
    name: Test and lint with TOX
    strategy:
      matrix:
        python-version: [ "3.7", "3.8", "3.9", "3.10", "3.11" ]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox tox-gh-actions
    - name: Test with tox
      run: tox
  install-dev:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    name: Verify dev env
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - run: "python -m pip install -e .[develop]"
      - run: "python -c 'import trouve; print(trouve.__version__)'"
  deploy:
    runs-on: ubuntu-latest
    name: Build and publish to PYPI
    needs: [qa, install-dev]
#    if: github.ref == "refs/heads/master"
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build
      - name: Build distributions
        run: python -m build
      - name: check it
        run: ls dist

#
#deploy:
#
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v3
#    - name: Set up Python
#      uses: actions/setup-python@v3
#      with:
#        python-version: "3.x"
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install build
#    - name: Build package
#      run: python -m build
#    - name: Publish package
#      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
#      with:
#        user: __token__
#        password: ${{ secrets.PYPI_API_TOKEN }}

#name: Python package
#
#on:
#  push:
#    branches: [ "develop", "feature/*" ]
#  pull_request:
#    branches: [ "develop" ]
#
#jobs:
#  tests:
#    name: tox on ${{ matrix.python-version }}
#    runs-on: ubuntu-latest
#    env:
#      USING_COVERAGE: "3.6,3.8"
#
#    strategy:
#      matrix:
#        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10", "3.11"]
#
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-python@v4
#        with:
#          python-version: ${{ matrix.python-version }}
#      - name: Install dependencies
#        run: |
#          python -VV
##          python -m site
#          python -m pip install --upgrade pip setuptools wheel
#          python -m pip install --upgrade coverage[toml] tox tox-gh-actions
#
#      - name: Run tox targets for ${{ matrix.python-version }}
#        run: python -m tox